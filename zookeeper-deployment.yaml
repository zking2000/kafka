apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: kafka
  labels:
    app: zookeeper
spec:
  serviceName: zookeeper-headless
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      initContainers:
      - name: cert-converter
        image: openjdk:11-jre-slim
        command:
        - /bin/bash
        - -c
        - |
          apt-get update && apt-get install -y openssl
          
          # 创建keystore和truststore目录
          mkdir -p /etc/kafka/secrets/zookeeper-server-tls
          
          # 转换证书为JKS格式
          openssl pkcs12 -export -in /etc/certs/tls.crt -inkey /etc/certs/tls.key \
            -out /tmp/keystore.p12 -name zookeeper-server -passout pass:changeit
          
          keytool -importkeystore -deststorepass changeit -destkeypass changeit \
            -destkeystore /etc/kafka/secrets/zookeeper-server-tls/keystore.jks \
            -srckeystore /tmp/keystore.p12 -srcstoretype PKCS12 -srcstorepass changeit
          
          # 创建truststore并导入CA证书
          keytool -import -trustcacerts -alias ca-cert -file /etc/ca-certs/ca.crt \
            -keystore /etc/kafka/secrets/zookeeper-server-tls/truststore.jks \
            -storepass changeit -noprompt
          
          # 复制配置文件到可写目录
          cp /etc/kafka-config/zoo.cfg /etc/kafka/secrets/zoo.cfg
          
        volumeMounts:
        - name: zookeeper-server-certs
          mountPath: /etc/certs
        - name: ca-certs
          mountPath: /etc/ca-certs
        - name: cert-storage
          mountPath: /etc/kafka/secrets
        - name: zookeeper-config
          mountPath: /etc/kafka-config
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2182
          name: secure-client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_SECURE_CLIENT_PORT
          value: "2182"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOOKEEPER_INIT_LIMIT
          value: "10"
        - name: ZOOKEEPER_SYNC_LIMIT
          value: "5"
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_CNXN_FACTORY
          value: "org.apache.zookeeper.server.NettyServerCnxnFactory"
        - name: ZOOKEEPER_SSL_KEYSTORE_LOCATION
          value: "/etc/kafka/secrets/zookeeper-server-tls/keystore.jks"
        - name: ZOOKEEPER_SSL_KEYSTORE_PASSWORD
          value: "changeit"
        - name: ZOOKEEPER_SSL_TRUSTSTORE_LOCATION
          value: "/etc/kafka/secrets/zookeeper-server-tls/truststore.jks"
        - name: ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD
          value: "changeit"
        - name: ZOOKEEPER_SSL_CLIENT_AUTH
          value: "need"
        - name: ZOOKEEPER_CONFIG_FILE
          value: "/etc/kafka/secrets/zoo.cfg"
        volumeMounts:
        - name: cert-storage
          mountPath: /etc/kafka/secrets
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: zookeeper-config
        configMap:
          name: zookeeper-config
      - name: zookeeper-server-certs
        secret:
          secretName: zookeeper-server-tls
      - name: ca-certs
        secret:
          secretName: kafka-ca-secret
      - name: cert-storage
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi 