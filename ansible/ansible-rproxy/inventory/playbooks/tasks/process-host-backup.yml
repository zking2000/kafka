---
# 处理单个主机的备份文件推送任务
- name: "为主机 {{ host_name }} 创建工作目录"
  file:
    path: "{{ project_path }}/work-{{ host_name }}"
    state: directory
    mode: '0755'

- name: "克隆或更新GitHub仓库 - {{ host_name }}"
  git:
    repo: "https://{{ github_token }}@github.com/{{ github_repo }}.git"
    dest: "{{ project_path }}/work-{{ host_name }}/repo"
    force: yes
    version: "{{ github_branch | default('main') }}"
  environment:
    GIT_TERMINAL_PROMPT: '0'
  no_log: true  # 隐藏包含token的日志

- name: "配置Git用户信息 - {{ host_name }}"
  git_config:
    name: "{{ item.name }}"
    scope: local
    value: "{{ item.value }}"
    repo: "{{ project_path }}/work-{{ host_name }}/repo"
  loop:
    - { name: "user.name", value: "{{ git_user_name }}" }
    - { name: "user.email", value: "{{ git_user_email }}" }

- name: "确保目标分支目录存在 - {{ host_name }}"
  file:
    path: "{{ project_path }}/work-{{ host_name }}/repo/{{ github_branch | default('main') }}"
    state: directory
    mode: '0755'

- name: "同步备份文件到Git仓库 - {{ host_name }}"
  synchronize:
    src: "{{ host_backup_path }}/conf/"
    dest: "{{ project_path }}/work-{{ host_name }}/repo/{{ github_branch | default('main') }}/"
    delete: yes
    recursive: yes
  delegate_to: localhost

- name: "复制备份元数据 - {{ host_name }}"
  copy:
    src: "{{ host_backup_path }}/backup_metadata.txt"
    dest: "{{ project_path }}/work-{{ host_name }}/repo/{{ github_branch | default('main') }}/backup_metadata.txt"
    remote_src: yes
  when: lookup('file', host_backup_path + '/backup_metadata.txt', errors='ignore')

- name: "检查是否有文件变更 - {{ host_name }}"
  shell: |
    cd "{{ project_path }}/work-{{ host_name }}/repo"
    git add .
    git diff --cached --name-only
  register: git_changes
  changed_when: false

- name: "提交变更 - {{ host_name }}"
  shell: |
    cd "{{ project_path }}/work-{{ host_name }}/repo"
    git add .
    git commit -m "自动备份Apache配置 - {{ host_name }} - {{ ansible_date_time.iso8601 }}"
  when: git_changes.stdout_lines | length > 0
  register: git_commit

- name: "推送到GitHub - {{ host_name }}"
  shell: |
    cd "{{ project_path }}/work-{{ host_name }}/repo"
    git push origin {{ github_branch | default('main') }}
  when: git_commit is changed
  environment:
    GIT_TERMINAL_PROMPT: '0'
  no_log: true  # 隐藏包含token的输出

- name: "显示推送结果 - {{ host_name }}"
  debug:
    msg: |
      {% if git_changes.stdout_lines | length > 0 %}
      ✅ {{ host_name }} 备份推送成功
      - 分支: {{ github_branch | default('main') }}
      - 变更文件: {{ git_changes.stdout_lines | length }}
      - 提交时间: {{ ansible_date_time.iso8601 }}
      {% else %}
      ℹ️ {{ host_name }} 没有文件变更，跳过推送
      {% endif %}

- name: "清理工作目录 - {{ host_name }}"
  file:
    path: "{{ project_path }}/work-{{ host_name }}"
    state: absent 
