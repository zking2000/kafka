all:
  children:
    rproxy:
      hosts:
        # 方式1: 使用SSH ProxyJump（推荐方式）
        # 通过跳板机/堡垒机连接到目标服务器
        prod-rproxy-1:
          ansible_host: "TARGET_SERVER_IP"          # 目标服务器的内网IP
          ansible_user: "stephen_h_zhou"             # 目标服务器的SSH用户名
          ansible_ssh_private_key_file: "~/.ssh/google_compute_engine"
          ansible_port: 22                           # 目标服务器的SSH端口
          github_branch: "main"
          # ProxyJump配置 - 通过跳板机连接
          ansible_ssh_common_args: >-
            -o ProxyJump=stephen_h_zhou@PROXY_SERVER_IP:PROXY_PORT
            -o StrictHostKeyChecking=no
            -o UserKnownHostsFile=/dev/null
            -o ControlMaster=auto
            -o ControlPersist=60s
        
        # 方式2: 使用ProxyCommand（适用于需要通过netcat等工具的场景）
        # prod-rproxy-2:
        #   ansible_host: "TARGET_SERVER_IP"
        #   ansible_user: "stephen_h_zhou"
        #   ansible_ssh_private_key_file: "~/.ssh/google_compute_engine"
        #   ansible_port: 22
        #   github_branch: "main"
        #   # ProxyCommand配置
        #   ansible_ssh_common_args: >-
        #     -o ProxyCommand="ssh -W %h:%p stephen_h_zhou@PROXY_SERVER_IP -p PROXY_PORT"
        #     -o StrictHostKeyChecking=no
        #     -o UserKnownHostsFile=/dev/null
        
        # 方式3: 使用SOCKS代理（适用于已有SOCKS代理服务的场景）
        # prod-rproxy-3:
        #   ansible_host: "TARGET_SERVER_IP"
        #   ansible_user: "stephen_h_zhou"
        #   ansible_ssh_private_key_file: "~/.ssh/google_compute_engine"
        #   ansible_port: 22
        #   github_branch: "main"
        #   # SOCKS代理配置
        #   ansible_ssh_common_args: >-
        #     -o ProxyCommand="nc -X 5 -x SOCKS_PROXY_IP:SOCKS_PROXY_PORT %h %p"
        #     -o StrictHostKeyChecking=no
        #     -o UserKnownHostsFile=/dev/null
        
        # 方式4: 多层跳板（如果需要通过多台服务器跳转）
        # prod-rproxy-4:
        #   ansible_host: "TARGET_SERVER_IP"
        #   ansible_user: "stephen_h_zhou"
        #   ansible_ssh_private_key_file: "~/.ssh/google_compute_engine"
        #   ansible_port: 22
        #   github_branch: "main"
        #   # 多层ProxyJump配置
        #   ansible_ssh_common_args: >-
        #     -o ProxyJump=stephen_h_zhou@FIRST_PROXY_IP:FIRST_PROXY_PORT,stephen_h_zhou@SECOND_PROXY_IP:SECOND_PROXY_PORT
        #     -o StrictHostKeyChecking=no
        #     -o UserKnownHostsFile=/dev/null
        
  vars:
    # Python解释器
    ansible_python_interpreter: /usr/bin/python3
    
    # 备份配置
    backup_dir: "/tmp/apache_backup"
    
    # Git配置（请根据实际情况配置这些变量）
    github_repo: "YOUR_GITHUB_REPO"              # 请替换为您的GitHub仓库
    github_token: "YOUR_GITHUB_TOKEN"            # 请替换为您的GitHub令牌
    git_user_name: "Your Name"                   # 请替换为您的Git用户名
    git_user_email: "your.email@example.com"    # 请替换为您的Git邮箱
    
    # 全局SSH配置
    ansible_ssh_pipelining: yes
    ansible_ssh_timeout: 30
    
    # 如果所有服务器都使用相同的代理，可以在这里设置全局代理
    # ansible_ssh_common_args: >-
    #   -o ProxyJump=stephen_h_zhou@GLOBAL_PROXY_IP:GLOBAL_PROXY_PORT
    #   -o StrictHostKeyChecking=no
    #   -o UserKnownHostsFile=/dev/null 