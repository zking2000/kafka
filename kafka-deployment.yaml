apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: cert-converter
        image: openjdk:11-jre-slim
        command:
        - /bin/bash
        - -c
        - |
          apt-get update && apt-get install -y openssl
          
          # 创建secrets目录
          mkdir -p /etc/kafka/secrets
          
          # 转换Kafka服务器证书为JKS格式
          openssl pkcs12 -export -in /etc/kafka-certs/tls.crt -inkey /etc/kafka-certs/tls.key \
            -out /tmp/kafka-keystore.p12 -name kafka-server -passout pass:changeit
          
          keytool -importkeystore -deststorepass changeit -destkeypass changeit \
            -destkeystore /etc/kafka/secrets/keystore.jks \
            -srckeystore /tmp/kafka-keystore.p12 -srcstoretype PKCS12 -srcstorepass changeit
          
          # 创建truststore并导入CA证书
          keytool -import -trustcacerts -alias ca-cert -file /etc/ca-certs/ca.crt \
            -keystore /etc/kafka/secrets/truststore.jks \
            -storepass changeit -noprompt
          
          # 创建凭据文件
          echo "changeit" > /etc/kafka/secrets/keystore_creds
          echo "changeit" > /etc/kafka/secrets/key_creds
          echo "changeit" > /etc/kafka/secrets/truststore_creds
          
        volumeMounts:
        - name: kafka-server-certs
          mountPath: /etc/kafka-certs
        - name: ca-certs
          mountPath: /etc/ca-certs
        - name: cert-storage
          mountPath: /etc/kafka/secrets
        - name: kafka-config
          mountPath: /etc/kafka-config
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.4.0
        ports:
        - containerPort: 9092
          name: plaintext
        - containerPort: 9093
          name: ssl
        - containerPort: 9999
          name: jmx
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2182"
        - name: KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE
          value: "true"
        - name: KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET
          value: "org.apache.zookeeper.ClientCnxnSocketNetty"
        - name: KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION
          value: "/etc/kafka/secrets/keystore.jks"
        - name: KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD
          value: "changeit"
        - name: KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION
          value: "/etc/kafka/secrets/truststore.jks"
        - name: KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD
          value: "changeit"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,SSL:SSL"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-0.kafka-headless:9092,SSL://kafka-0.kafka-headless:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "SSL"
        - name: KAFKA_SSL_KEYSTORE_FILENAME
          value: "keystore.jks"
        - name: KAFKA_SSL_KEYSTORE_CREDENTIALS
          value: "keystore_creds"
        - name: KAFKA_SSL_KEY_CREDENTIALS
          value: "key_creds"
        - name: KAFKA_SSL_TRUSTSTORE_FILENAME
          value: "truststore.jks"
        - name: KAFKA_SSL_TRUSTSTORE_CREDENTIALS
          value: "truststore_creds"
        - name: KAFKA_SSL_CLIENT_AUTH
          value: "required"
        - name: KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
          value: ""
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_JMX_PORT
          value: "9999"
        - name: KAFKA_JMX_HOSTNAME
          value: "localhost"
        volumeMounts:
        - name: cert-storage
          mountPath: /etc/kafka/secrets
        - name: kafka-data
          mountPath: /var/lib/kafka
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: kafka-config
        configMap:
          name: kafka-config
      - name: kafka-server-certs
        secret:
          secretName: kafka-server-tls
      - name: ca-certs
        secret:
          secretName: kafka-ca-secret
      - name: cert-storage
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi 