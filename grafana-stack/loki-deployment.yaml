---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: grafana-stack
  labels:
    app: loki
    component: loki
spec:
  replicas: 2  # 提高可用性和负载分散
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: loki
      component: loki
  template:
    metadata:
      labels:
        app: loki
        component: loki
    spec:
      # 反亲和性确保Pod分散在不同节点
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - loki
              topologyKey: kubernetes.io/hostname
      
      # 安全上下文
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      
      containers:
      - name: loki
        image: grafana/loki:3.1.1
        imagePullPolicy: IfNotPresent
        args:
          - -config.file=/etc/loki/loki.yaml
          - -log.level=info
          - -server.path-prefix=/
        
        ports:
        - name: http-metrics
          containerPort: 3100
          protocol: TCP
        - name: grpc
          containerPort: 9095
          protocol: TCP
        
        # 优化的资源配置
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        
        # 健康检查
        livenessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        
        # 环境变量
        env:
        - name: JAEGER_AGENT_HOST
          value: ""
        - name: JAEGER_ENDPOINT
          value: ""
        - name: JAEGER_SAMPLER_TYPE
          value: ""
        - name: JAEGER_SAMPLER_PARAM
          value: ""
        
        # 挂载配置
        volumeMounts:
        - name: config
          mountPath: /etc/loki
        - name: runtime-config
          mountPath: /etc/loki/runtime-config
        - name: storage
          mountPath: /tmp/loki
        - name: wal
          mountPath: /tmp/wal
        
        # 安全上下文
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      
      # 优雅关闭配置
      terminationGracePeriodSeconds: 4800
      
      # 卷配置
      volumes:
      - name: config
        configMap:
          name: loki-config
      - name: runtime-config
        configMap:
          name: loki-runtime-config
      - name: storage
        emptyDir:
          sizeLimit: 50Gi  # 增大存储限制
      - name: wal
        emptyDir:
          sizeLimit: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: grafana-stack
  labels:
    app: loki
    component: loki
spec:
  type: ClusterIP
  ports:
  - name: http-metrics
    port: 3100
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app: loki
    component: loki

---
apiVersion: v1
kind: Service
metadata:
  name: loki-headless
  namespace: grafana-stack
  labels:
    app: loki
    component: loki
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 3100
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app: loki
    component: loki 